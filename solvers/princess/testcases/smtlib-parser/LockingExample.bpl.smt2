(set-option :produce-models true)
(set-option :produce-interpolants true)
(set-logic AUFLIRA)
(set-info :source |
    SMT script generated on 2015/01/29 by Ultimate. http://ultimate.informatik.uni-freiburg.de/
|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(declare-fun c_lockingEx_L () Int)
(declare-fun c_lockingEx_L_primed () Int)
(declare-fun c_lockingEx_new () Int)
(declare-fun c_lockingEx_new_primed () Int)
(declare-fun c_lockingEx_auld () Int)
(declare-fun c_lockingEx_auld_primed () Int)
(echo "begin unification")
(push 1)
(assert true)
(assert (not false))
(check-sat)
(pop 1)
(echo "end unification")
(echo "starting trace check")
(push 1)
(push 1)
(assert (distinct true true))
(check-sat)
(pop 1)
(declare-fun lockingEx_L_0 () Int)
(push 1)
(assert (distinct (= lockingEx_L_0 0) (= lockingEx_L_0 0)))
(check-sat)
(pop 1)
(push 1)
(assert (distinct true true))
(check-sat)
(pop 1)
(declare-fun lockingEx_new_-1 () Int)
(declare-fun lockingEx_L_2 () Int)
(declare-fun lockingEx_auld_2 () Int)
(push 1)
(assert (distinct (and (= lockingEx_L_2 1) (= lockingEx_auld_2 lockingEx_new_-1)) (and (= lockingEx_L_2 1) (= lockingEx_auld_2 lockingEx_new_-1))))
(check-sat)
(pop 1)
(push 1)
(assert (distinct (not (= lockingEx_new_-1 lockingEx_auld_2)) (not (= lockingEx_new_-1 lockingEx_auld_2))))
(check-sat)
(pop 1)
(push 1)
(assert (distinct true true))
(check-sat)
(pop 1)
(push 1)
(assert (distinct (= lockingEx_L_2 1) (= lockingEx_L_2 1)))
(check-sat)
(pop 1)
(push 1)
(assert (distinct false false))
(check-sat)
(pop 1)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (= lockingEx_L_0 0) :named ssa_0))
(assert (! true :named ssa_1))
(assert (! (and (= lockingEx_L_2 1) (= lockingEx_auld_2 lockingEx_new_-1)) :named ssa_2))
(assert (! (not (= lockingEx_new_-1 lockingEx_auld_2)) :named ssa_3))
(assert (! true :named ssa_4))
(assert (! (= lockingEx_L_2 1) :named ssa_5))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 ssa_4 (and ssa_5 ssa_postcond))
(echo "finished trace check")
(pop 1)
