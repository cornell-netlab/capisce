(set-option :produce-models true)
(set-option :produce-interpolants true)
;(set-option :produce-unsat-cores true)
(set-logic AUFLIRA)
(set-info :source |
    SMT script generated on 2015/01/31 by Ultimate. http://ultimate.informatik.uni-freiburg.de/
|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(declare-fun |#offset~STRUCT#?h~INT?n~$Pointer$#~h| () Int)
(declare-fun |#offset~STRUCT#?h~INT?n~$Pointer$#~n| () Int)
(declare-fun |#sizeof~INT| () Int)
(declare-fun |#sizeof~$Pointer$| () Int)
(declare-fun |#to_int| (Real) Int)
(declare-fun |c_#memory_int| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_$Pointer$.base| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_$Pointer$.base_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_$Pointer$.offset| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_$Pointer$.offset_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#valid| () (Array Int Bool))
(declare-fun |c_#valid_primed| () (Array Int Bool))
(declare-fun |c_#length| () (Array Int Int))
(declare-fun |c_#length_primed| () (Array Int Int))
(declare-fun c_~malloc_~size () Int)
(declare-fun c_~malloc_~size_primed () Int)
(declare-fun |c_~malloc_#res.base| () Int)
(declare-fun |c_~malloc_#res.base_primed| () Int)
(declare-fun |c_~malloc_#res.offset| () Int)
(declare-fun |c_~malloc_#res.offset_primed| () Int)
(declare-fun |c_main_#res| () Int)
(declare-fun |c_main_#res_primed| () Int)
(declare-fun |c_main_#t~malloc0.base| () Int)
(declare-fun |c_main_#t~malloc0.base_primed| () Int)
(declare-fun |c_main_#t~malloc0.offset| () Int)
(declare-fun |c_main_#t~malloc0.offset_primed| () Int)
(declare-fun |c_main_#t~post2| () Int)
(declare-fun |c_main_#t~post2_primed| () Int)
(declare-fun |c_main_#t~malloc4.base| () Int)
(declare-fun |c_main_#t~malloc4.base_primed| () Int)
(declare-fun |c_main_#t~malloc4.offset| () Int)
(declare-fun |c_main_#t~malloc4.offset_primed| () Int)
(declare-fun |c_main_#t~mem6.base| () Int)
(declare-fun |c_main_#t~mem6.base_primed| () Int)
(declare-fun |c_main_#t~mem6.offset| () Int)
(declare-fun |c_main_#t~mem6.offset_primed| () Int)
(declare-fun |c_main_#t~nondet1| () Int)
(declare-fun |c_main_#t~nondet1_primed| () Int)
(declare-fun |c_main_#t~post8| () Int)
(declare-fun |c_main_#t~post8_primed| () Int)
(declare-fun |c_main_#t~malloc10.base| () Int)
(declare-fun |c_main_#t~malloc10.base_primed| () Int)
(declare-fun |c_main_#t~malloc10.offset| () Int)
(declare-fun |c_main_#t~malloc10.offset_primed| () Int)
(declare-fun |c_main_#t~mem12.base| () Int)
(declare-fun |c_main_#t~mem12.base_primed| () Int)
(declare-fun |c_main_#t~mem12.offset| () Int)
(declare-fun |c_main_#t~mem12.offset_primed| () Int)
(declare-fun |c_main_#t~nondet7| () Int)
(declare-fun |c_main_#t~nondet7_primed| () Int)
(declare-fun |c_main_#t~post16| () Int)
(declare-fun |c_main_#t~post16_primed| () Int)
(declare-fun |c_main_#t~mem17.base| () Int)
(declare-fun |c_main_#t~mem17.base_primed| () Int)
(declare-fun |c_main_#t~mem17.offset| () Int)
(declare-fun |c_main_#t~mem17.offset_primed| () Int)
(declare-fun |c_main_#t~mem15| () Int)
(declare-fun |c_main_#t~mem15_primed| () Int)
(declare-fun |c_main_#t~post19| () Int)
(declare-fun |c_main_#t~post19_primed| () Int)
(declare-fun |c_main_#t~mem20.base| () Int)
(declare-fun |c_main_#t~mem20.base_primed| () Int)
(declare-fun |c_main_#t~mem20.offset| () Int)
(declare-fun |c_main_#t~mem20.offset_primed| () Int)
(declare-fun |c_main_#t~mem18| () Int)
(declare-fun |c_main_#t~mem18_primed| () Int)
(declare-fun |c_main_#t~mem21| () Int)
(declare-fun |c_main_#t~mem21_primed| () Int)
(declare-fun |c_main_#t~mem23.base| () Int)
(declare-fun |c_main_#t~mem23.base_primed| () Int)
(declare-fun |c_main_#t~mem23.offset| () Int)
(declare-fun |c_main_#t~mem23.offset_primed| () Int)
(declare-fun |c_main_#t~mem22.base| () Int)
(declare-fun |c_main_#t~mem22.base_primed| () Int)
(declare-fun |c_main_#t~mem22.offset| () Int)
(declare-fun |c_main_#t~mem22.offset_primed| () Int)
(declare-fun c_main_~i~4 () Int)
(declare-fun c_main_~i~4_primed () Int)
(declare-fun c_main_~y~4 () Int)
(declare-fun c_main_~y~4_primed () Int)
(declare-fun c_main_~a~4.base () Int)
(declare-fun c_main_~a~4.base_primed () Int)
(declare-fun c_main_~a~4.offset () Int)
(declare-fun c_main_~a~4.offset_primed () Int)
(declare-fun c_main_~t~4.base () Int)
(declare-fun c_main_~t~4.base_primed () Int)
(declare-fun c_main_~t~4.offset () Int)
(declare-fun c_main_~t~4.offset_primed () Int)
(declare-fun c_main_~p~4.base () Int)
(declare-fun c_main_~p~4.base_primed () Int)
(declare-fun c_main_~p~4.offset () Int)
(declare-fun c_main_~p~4.offset_primed () Int)

(echo "starting trace check")
;(push 1)
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#valid_-1| () (Array Int Bool))
(declare-fun |#memory_$Pointer$.offset_-1| () (Array Int (Array Int Int)))
(declare-fun |#memory_int_-1| () (Array Int (Array Int Int)))
(declare-fun |#memory_$Pointer$.base_-1| () (Array Int (Array Int Int)))
(declare-fun |#valid_0| () (Array Int Bool))
(declare-fun |#valid_1| () (Array Int Bool))
(declare-fun |#length_4| () (Array Int Int))
(declare-fun |#memory_$Pointer$.offset_4| () (Array Int (Array Int Int)))
(declare-fun |#valid_4| () (Array Int Bool))
(declare-fun |#memory_int_4| () (Array Int (Array Int Int)))
(declare-fun |#memory_$Pointer$.base_4| () (Array Int (Array Int Int)))
(declare-fun main_~i~4_5 () Int)
(declare-fun main_~y~4_5 () Int)
(declare-fun |#length_6| () (Array Int Int))
(declare-fun |main_#t~malloc0.offset_6| () Int)
(declare-fun |main_#t~malloc0.base_6| () Int)
(declare-fun |#valid_6| () (Array Int Bool))
(declare-fun main_~a~4.offset_7 () Int)
(declare-fun main_~a~4.base_7 () Int)
(declare-fun main_~p~4.base_9 () Int)
(declare-fun main_~t~4.base_9 () Int)
(declare-fun main_~p~4.offset_9 () Int)
(declare-fun main_~t~4.offset_9 () Int)
(declare-fun |main_#t~nondet1_4| () Int)
(declare-fun main_~i~4_11 () Int)
(declare-fun |main_#t~post2_11| () Int)
(declare-fun |main_#t~nondet1_11| () Int)
(declare-fun |#memory_int_12| () (Array Int (Array Int Int)))
(declare-fun |#memory_$Pointer$.offset_12| () (Array Int (Array Int Int)))
(declare-fun |#memory_$Pointer$.base_12| () (Array Int (Array Int Int)))
(declare-fun |#length_13| () (Array Int Int))
(declare-fun |main_#t~malloc4.offset_13| () Int)
(declare-fun |main_#t~malloc4.base_13| () Int)
(declare-fun |#valid_13| () (Array Int Bool))
(declare-fun main_~t~4.base_14 () Int)
(declare-fun main_~t~4.offset_14 () Int)
(declare-fun |#memory_int_16| () (Array Int (Array Int Int)))
(declare-fun |#memory_$Pointer$.offset_16| () (Array Int (Array Int Int)))
(declare-fun |#memory_$Pointer$.base_16| () (Array Int (Array Int Int)))
(declare-fun |main_#t~mem6.base_17| () Int)
(declare-fun |main_#t~mem6.offset_17| () Int)
(declare-fun |main_#t~mem6.base_18| () Int)
(declare-fun main_~p~4.base_18 () Int)
(declare-fun |main_#t~mem6.offset_18| () Int)
(declare-fun main_~p~4.offset_18 () Int)
(declare-fun main_~i~4_20 () Int)
(declare-fun |main_#t~post2_20| () Int)
(declare-fun |main_#t~nondet1_20| () Int)
(declare-fun |#memory_int_21| () (Array Int (Array Int Int)))
(declare-fun |#memory_$Pointer$.offset_21| () (Array Int (Array Int Int)))
(declare-fun |#memory_$Pointer$.base_21| () (Array Int (Array Int Int)))
(declare-fun |#length_22| () (Array Int Int))
(declare-fun |main_#t~malloc4.offset_22| () Int)
(declare-fun |main_#t~malloc4.base_22| () Int)
(declare-fun |#valid_22| () (Array Int Bool))
(declare-fun main_~t~4.base_23 () Int)
(declare-fun main_~t~4.offset_23 () Int)

(assert (! (and (= |#length_13| (store |#length_6| |main_#t~malloc4.base_13| 8)) 
                (= |#valid_13| (store |#valid_6| |main_#t~malloc4.base_13| true)) 
             ) :named left))

(assert (! (and
           (= |#memory_$Pointer$.base_16| 
              (store |#memory_$Pointer$.base_12| main_~p~4.base_9 
                     (store (select |#memory_$Pointer$.base_12| main_~p~4.base_9) 
                            (+ main_~p~4.offset_9 4) 
                            |main_#t~malloc4.base_13|))) 
           ) :named left))

(assert (! (and (= main_~p~4.base_18
                  (select (select |#memory_$Pointer$.base_16| main_~p~4.base_9) 
                          (+ main_~p~4.offset_9 4))) 
                ) :named left))

(assert (! (and (= main_~p~4.base_18 |main_#t~mem6.base_17|) ) :named left))

(assert (! (and (= |#length_22| (store |#length_13| |main_#t~malloc4.base_22| 8)) 
                (= (select |#valid_13| |main_#t~malloc4.base_22|) false)
                   ) :named right))

(assert (! (not (<= 8
                    (select |#length_22| main_~p~4.base_18))) :named right))
(check-sat)

;(get-unsat-core)

(echo "interpolants-3")

; core: (ssa_13 ssa_14 ssa_16 ssa_17 ssa_18 ssa_22 ssa_25)

(get-interpolants
    left
    right)


